<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020年转计算机学院考试</title>
    <url>/2020/08/06/2020%E5%B9%B4%E8%BD%AC%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%80%83%E8%AF%95/</url>
    <content><![CDATA[<h5 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h5><p>​    此次为转入计算机学院的考试（无论报哪个专业均为此次考试）</p>
<h5 id="考试时间："><a href="#考试时间：" class="headerlink" title="考试时间："></a>考试时间：</h5><p>​    2020年大一下学期（正好是疫情停课到5月回来考试）</p>
<a id="more"></a>

<h5 id="考试内容："><a href="#考试内容：" class="headerlink" title="考试内容："></a>考试内容：</h5><p>​    C语言上机考试，3道题目，通过老师给出的几组数据即可</p>
<h5 id="标准："><a href="#标准：" class="headerlink" title="标准："></a>标准：</h5><p>​    报名资格：大一上学期绩点前20%（不含专业课）</p>
<p>​    进入复试条件：机试做对一道题以上，60，85，100三个档    </p>
<p>​    总成绩计算：（上学期期末成绩×60%+上机考试成绩×40%）×70%+面试成绩×30%</p>
<h5 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h5><p>​    1.从键盘输入几个数据，用冒泡排序法或者选择排序法排序。</p>
<p>​    2.小明充话费50元，假设小明每天只用1元花费，用够x元就可以返利1元，问几天可以用完话费？要求：从键盘输入x，打印出用完话费的天数，直到输入0结束程序。（大约7组测试数据）</p>
<p>​    3.指针问题（比较模糊）：编写一个函数void compare(int array[],int Num,int* Odd,int* Even)，在main()函数中任意输入一组数，打印出奇数的和以及偶数的和。</p>
<h5 id="建议："><a href="#建议：" class="headerlink" title="建议："></a>建议：</h5><p>​    疫情期间这次考试比较简单，如果上学期有C语言课，建议谭浩强的课后习题等做一遍，如果心有余力的话，可以去PTA网站做天梯赛L1的题目，最难也不会超过L1难度，结构体，指针在考察范围内，链表等数据结构不考。</p>
<p>​    机试如果满分，基本上没问题，如果只做对2道（85），由于期末成绩占比不大，就需要看看谁面试口才好了，外院也很有可能赢过计算机院内转专业的。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>转专业考试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/07/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Josephus问题</title>
    <url>/2020/07/15/Josephus%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h5 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h5><p>Josephus问题。在这个古老的问题中，N个身陷绝境的人一致同意通过以下方式减少生存人数。他们围坐成一圈（位置记为0到N-1）并从第一个人开始报数，报到M的人会被杀死，直到最后一个人留下了。传说中Josephus找到了不会被杀死的位置。编写一个Queue的用例Josephus，从命令行接受N和M并打印出人们被杀死的顺序</p>
<a id="more"></a>

<h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><p>% java Josephus 7 2</p>
<h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><p>1 3 5 0 4 2 6</p>
<hr>
<h5 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Josephus</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">	<span class="keyword">int</span> M = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line">	Queue&lt;Integer&gt; queue = <span class="keyword">new</span> Queue&lt;Integer&gt; ();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123; queue.enqueue(i); &#125;</span><br><span class="line">	<span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">	  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;M-<span class="number">1</span>; i++) &#123;</span><br><span class="line">	    queue.enqueue(queue.dequeue());   <span class="comment">//未报到M的人从队头出列，接着从队尾入列</span></span><br><span class="line">	  &#125;</span><br><span class="line">	  System.out.print(queue.dequeue() + <span class="string">" "</span>);<span class="comment">//报到M的人从队头出列，并打印</span></span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>解决了!</p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>算法第四版</tag>
      </tags>
  </entry>
  <entry>
    <title>2019-2020赛季欧冠1/4决赛 拜仁vs巴萨</title>
    <url>/2020/08/19/%E6%AC%A7%E5%86%A0%E5%B7%B4%E8%90%A8%E4%B8%8E%E6%8B%9C%E4%BB%81/</url>
    <content><![CDATA[<h4 id="2019-2020赛季欧冠1-4决赛-拜仁vs巴萨"><a href="#2019-2020赛季欧冠1-4决赛-拜仁vs巴萨" class="headerlink" title="2019-2020赛季欧冠1/4决赛 拜仁vs巴萨"></a>2019-2020赛季欧冠1/4决赛 拜仁vs巴萨</h4><p>几乎所有人看到这样的比分都会感到吃惊，8：2的比分，对于巴萨拜仁这经常在欧冠淘汰赛中碰面，并且实力总是不分上下的两支球队，这样的比分，是所有人都无法想象的。没有看直播的球迷们来说，这场比赛完完全全是单方面的屠杀。</p>
<p>但是，巴萨真的全场都被压制吗？</p>
<a id="more"></a>

<p>上半场的20分钟内，巴萨和拜仁一样的战术，高位逼抢，进攻几乎全线压上，两支球队在这一段时间内不分上下，球权高速转换，拜仁对梅西疏于看防，巴萨甚至制造了更多的威胁，但是，20分钟过后，巴萨球员体力明显不支，被拜仁短时间内连进3球，可以说，20分钟过后，拜仁才是单方面对巴萨的压制。</p>
<p>下半场局面也是如此，80分钟过后巴萨被连进3球。</p>
<p>从这场球赛也能反映出，球队和球队的风格是不一样的，如果用错战术，迎来的便是这样惨痛的失利。<strong>人同样也是一样，如果高估自己，可能会输的干干净净。“努力跳一跳，能够得着”的目标才是真正应该追求的目标。</strong></p>
]]></content>
      <categories>
        <category>足球</category>
      </categories>
      <tags>
        <tag>欧冠</tag>
      </tags>
  </entry>
</search>
